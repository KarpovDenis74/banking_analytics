name: banking_analytics workflow

on: [push]


jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        pip install -r requirements.txt
    - name: Install enviroment
      script: |
        export DB_ENGINE=${{ secrets.DB_ENGINE }}
        export DB_NAME=${{ secrets.DB_NAME }}
        export POSTGRES_USER=${{ secrets.POSTGRES_USER }}
        export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
        export DB_HOST=${{ secrets.DB_HOST }}
        export DB_PORT=${{ secrets.DB_PORT }}
        export SECRET_KEY=${{ secrets.SECRET_KEY }}
        export DJANGO_SUPERUSER_PASSWORD=${{ secrets.DJANGO_SUPERUSER_PASSWORD }}
        export DJANGO_SUPERUSER_EMAIL=${{ secrets.DJANGO_SUPERUSER_EMAIL }}
        export DJANGO_SUPERUSER_USERNAME=${{ secrets.DJANGO_SUPERUSER_USERNAME }}

        export REDIS_HOST=${{ secrets.REDIS_HOST }}
        export REDIS_PORT=${{ secrets.REDIS_PORT }}
            
    - name: Lint with flake8 
      run: flake8 .
    - name: Test with unitest
      run: |
        python manage.py test 
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/analitik:v1.0
  deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:   
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        script: |
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/analitik:v1.0
          sudo docker-compose down
          sudo docker volume rm ${{ secrets.USER }}_static
          sudo docker-compose up -d --force-recreate
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{github.actor}}:\n запустил процесс ${{ github.workflow }}\n - Проект успешно развернут на сервере!
